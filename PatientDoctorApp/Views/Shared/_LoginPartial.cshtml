@using Microsoft.AspNetCore.Identity
@using PatientDoctorApp.Areas.Identity.Data
@inject SignInManager<PatientDoctorAppUser> SignInManager
@inject UserManager<PatientDoctorAppUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
    </li>
    @if(User.Identity.IsAuthenticated && User.IsInRole("Doctor"))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Doctor" asp-action="DoctorIndex">Doctor</a>
        </li>
    }
    @if(User.Identity.IsAuthenticated && User.IsInRole("Patient"))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Patient" asp-action="PatientIndex">Patient</a>
        </li>
    }


    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
